
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class friendreq extends javax.swing.JFrame {

    /**
     * Creates new form friendreq
     */
    public friendreq() {this.setUndecorated(true);
        initComponents();
        ll.setVisible(false);l.setVisible(false);
        Timer timer1 = new Timer();
     int imageTime1=0; //0 seconds
    int changeTime1=15000; // 5 second
     timer1.schedule(new TimerTask()
       {
       @Override
        public void run() { 
               ((DefaultTableModel)rf.getModel()).setNumRows(0);
               
           try{
         Class.forName("java.sql.DriverManager");
                Connection con = (Connection)
                DriverManager.getConnection("jdbc:mysql://localhost:3306/main", "root", "");
                Statement stmt = (Statement) con.createStatement();
                String Query = "SELECT * FROM friendrequest WHERE reqto = '"+l.getText()+"' && accepted = 'N' ";
                ResultSet rs = stmt.executeQuery(Query);
                stmt.setMaxRows(100000);
                while(rs.next()) {           
                 String reqfrom = rs.getString("reqfrom");
                        DefaultTableModel model3 = (DefaultTableModel) rf.getModel();
                        model3.addRow(new Object[] {reqfrom});
                                 }
                con.close();stmt.close();rs.close();               
     }catch(   ClassNotFoundException | SQLException e){
         JOptionPane.showMessageDialog(null, e.getMessage());
     }
      }
      },imageTime1,changeTime1);
    Timer loading = new Timer();
    int startingTime=100; //0 seconds
    int delayTime=4000; // 100 milisecond
     loading.schedule(new TimerTask(){
        @Override
        public void run() {  System.out.print("a");           
                ll.setVisible(false);
                if(rf.getRowCount()==0){                    
                    dispose();
                }
        }
       },startingTime,delayTime);}
      
    
    

    public void genCode3 (String u) {
    l.setText(u);
    
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rf = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ll = new javax.swing.JLabel();
        l = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setLocationByPlatform(true);
        setUndecorated(true);
        setType(java.awt.Window.Type.UTILITY);

        jLabel2.setFont(new java.awt.Font("Yu Gothic", 0, 16)); // NOI18N
        jLabel2.setText("Friend Requests :");

        rf.setFont(new java.awt.Font("Tempus Sans ITC", 0, 11)); // NOI18N
        rf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request From"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rf.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(rf);
        if (rf.getColumnModel().getColumnCount() > 0) {
            rf.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Yu Gothic", 0, 16)); // NOI18N
        jLabel3.setText("  Accept");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Yu Gothic", 0, 16)); // NOI18N
        jLabel4.setText("  Reject");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        jLabel5.setText("< Back");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        ll.setFont(new java.awt.Font("Yu Gothic", 0, 10)); // NOI18N
        ll.setText("  Friend Request Accepted ");
        ll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                llMouseClicked(evt);
            }
        });

        l.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        l.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ll))
                .addGap(0, 104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ll, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked

dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked

    private void llMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_llMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_llMouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
int row = rf.getSelectedRow();
String request =(String) rf.getModel().getValueAt(row,0);
 try{
                Class.forName("java.sql.DriverManager");
                Connection con = (Connection)
                DriverManager.getConnection("jdbc:mysql://localhost:3306/main", "root", "");
                Statement stmt = (Statement) con.createStatement();Statement stm = (Statement) con.createStatement();
                String Query = "UPDATE FRIENDREQUEST SET ACCEPTED = 'Y' WHERE REQFROM = '"+request+"' && REQTO ='"+l.getText()+"'";
                String Quer = "UPDATE FRIENDREQUEST SET ACCEPTED = 'Y' WHERE REQTo = '"+request+"' && REQfrom ='"+l.getText()+"'";
                stmt.executeUpdate(Query);stm.executeUpdate(Quer);
                {((DefaultTableModel)rf.getModel()).setNumRows(0);
     ll.setVisible(true);
               ll.setText(" Request Accepted ");
           }con.close();stmt.close();    if(rf.getRowCount()==0){
               this.dispose();
           }                        
     }catch(ClassNotFoundException | SQLException e){
         JOptionPane.showMessageDialog(null, e.getMessage());
     }         
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseClicked

    private void lMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lMouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
int row = rf.getSelectedRow();
String request =(String) rf.getModel().getValueAt(row,0);
 try{
                Class.forName("java.sql.DriverManager");
                Connection con = (Connection)
                DriverManager.getConnection("jdbc:mysql://localhost:3306/main", "root", "");
                Statement stmt = (Statement) con.createStatement();Statement stm = (Statement) con.createStatement();
                String Query = "DELETE FROM FRIENDREQUEST WHERE REQFROM = '"+request+"' && REQTO ='"+l.getText()+"'";
                String Quer = "DELETE FROM FRIENDREQUEST WHERE REQTo = '"+request+"' && REQfrom ='"+l.getText()+"'";
                stmt.executeUpdate(Query);stm.executeUpdate(Quer);
                JOptionPane.showMessageDialog(this,"The Person Can Send You Request Again !! You Can Block This Person From Settings.");
                {((DefaultTableModel)rf.getModel()).setNumRows(0);
     ll.setVisible(true);
               ll.setText(" Request Rejected ");
           }con.close();stmt.close();    if(rf.getRowCount()==0){
               this.dispose();
           }                        
     }catch(ClassNotFoundException | SQLException e){
         JOptionPane.showMessageDialog(null, e.getMessage());
     }         
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(friendreq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(friendreq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(friendreq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(friendreq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new friendreq().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l;
    private javax.swing.JLabel ll;
    private javax.swing.JTable rf;
    // End of variables declaration//GEN-END:variables
}
